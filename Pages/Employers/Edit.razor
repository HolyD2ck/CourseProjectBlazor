@page "/Employers/Edit/{id:int}"
@using CourseProjectBlazor.Models
@inject CourseProjectBlazorContext _context
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@inject IWebHostEnvironment _env

<h3>Редактирование данных работодателя</h3>
@if (employer == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@employer" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="surname" class="control-label">Фамилия</label>
                    <InputText id="surname" @bind-Value="employer.Фамилия" />
                </div>
                <div class="form-group">
                    <label for="name" class="control-label">Имя</label>
                    <InputText id="name" @bind-Value="employer.Имя" />
                </div>
                <div class="form-group">
                    <label for="patronymic" class="control-label">Отчество</label>
                    <InputText id="patronymic" @bind-Value="employer.Отчество" />
                </div>
                <div class="form-group">
                    <label for="organization" class="control-label">Организация</label>
                    <InputText id="organization" @bind-Value="employer.Организация" />
                </div>
                <div class="form-group">
                    <label for="foundingDate" class="control-label">Дата Основания</label>
                    <InputDate id="foundingDate" @bind-Value="employer.Дата_Основания" />
                </div>
                <div class="form-group">
                    <label for="vacancy" class="control-label">Вакансия</label>
                    <InputText id="vacancy" @bind-Value="employer.Вакансия" />
                </div>
                <div class="form-group">
                    <label for="phone" class="control-label">Телефон</label>
                    <InputText id="phone" @bind-Value="employer.Телефон" />
                </div>
                <div class="form-group">
                    <label for="email" class="control-label">Email</label>
                    <InputText id="email" @bind-Value="employer.Email" />
                </div>
                <div class="form-group">
                    <label for="photo" class="control-label">Фото (менее 500кб)</label>
                    <InputFile id="photo" OnChange="@OnInputFileChange" accept=".jpg,.jpeg,.png,.gif" />
                </div>
                <div class="form-group">
                    <br />
                    <button type="submit">Изменить работодателя</button>
                </div>
                <br />

            </div>
        </div>
        <button type="submit" class="btn btn-primary">Сохранить</button>
        <button class="btn btn-secondary" href="/Employers/Index">Отмена</button>
    </EditForm>
}
@code {
    [Parameter]
    public int id { get; set; }
    private Employer employer;

    protected override async Task OnInitializedAsync()
    {
        employer = await _context.Employer.FirstOrDefaultAsync(m => m.id == id);
        if (employer == null)
        {
            NavigationManager.NavigateTo("Employers/Index");
        }
    }
    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var path = Path.Combine(_env.WebRootPath, "img/employers", e.File.Name);
        using (var stream = new FileStream(path, FileMode.Create))
        {
            await e.File.OpenReadStream().CopyToAsync(stream);
        }
       employer.Фото = Path.Combine("img/employers", e.File.Name);
    }

    private async Task HandleValidSubmit()
    {
        _context.Employer.Update(employer);
        await _context.SaveChangesAsync();
        NavigationManager.NavigateTo("Employers/Index");
    }

    private void Back()
    {
        NavigationManager.NavigateTo("Employers/Index");
    }
}
